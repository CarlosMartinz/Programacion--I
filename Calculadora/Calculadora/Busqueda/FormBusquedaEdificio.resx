<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAHudAAB7nQAAAAAAAAAA
        AAA8OU0APDhNADw4TgA8NFAALypCAPX19gD///8A+vr6Af///wPk5+IEtru1BqesqQdiaGIIfW0gCZWE
        PQlrZ0UKa2dFCpOBMgl9bB8JYmhjCKesqQe2urUG5OfiBP///wP6+voB////APX19gAvKkEAPDVPADw4
        TQA8OE0APDlMADxDQwBHT08AQklKBjU8PBYEBAUpAAACLQADBi8AAwYxAAQHMgAHCTMCCg00AAYINCQs
        MDURJ1o2ABVGNhopQjYZKUE2ABhQNhEoWzYkLC81AAYINAIKDTQABwkzAAQHMgADBjEAAwYvAAACLQQE
        BSk1PDwWQklKBkdPUAA8Q0MAPEJDAFlcYQJXW2AAQ0hLj3d6ff+BhYfuf4KF8IOGh/CEh4fwgYSG73+C
        hO+Dh4rvWFxd8HBiKvGJeELxZmBH8WZgSPGGdDbxcGIp8VhcXfCDh4rvf4KE74GEhu+Eh4fwg4aH8H+C
        hfCBhYfud3p9/0NIS49XW2AAWVxhAjxCQwA7QUQAfYCDA3N2eQBPVFeo5ufn//////v//v7/+fv///X4
        ///+/v///f38//////+Oj4r/1aAA///cKv+ym03/sptM///dLv/VoAD/jo+K///////9/fz//v7///b5
        ///4+v/////+//////vm5+f/T1RXqHN2eQB9gIMDO0FEADtBRAB8f4IDcnV4AE9TV6fi4+T/////+ry+
        wv5pYkL+f3RP/oSGhP7////+/////o2Oif7MnAD+/8sP/rCVSP6wlkr+/91I/s6eAv6NjYf+/////v//
        //6DhH/+fXFF/mxnUf67vsH+////+uLj5P9PU1encnV4AHx/ggM7QUQAO0FEAHx/ggNxdXgAT1RXqOPk
        5P/////7qa+7/7iOB///zyn/goJ3//7/////////jI2I/82dAP//xgD/rI81/7CWS///31D/06Yb/4uL
        g////////////4F8Zv/9wwX/u6A7/6muuP/////74+Tk/09UV6hxdXgAfH+CAztBRAA7QUQAe3+BA3F0
        dwBPU1en4uPj//////unrLf/k3IC/9CgC/94d2///v////////+Ojon/16MA///OAP+ujBr/sZxM///p
        Tv/ctzX/jo6I////////////dXNj/8yZAP+Zex//p6y3//////vi4+P/T1NXp3F0dwB7f4EDO0FEADtB
        RAB+gYQDc3d6AE9UV6bl5ub//////Nna2/+QkZD/kZKO/7Cys///////4+Tl/1lcXf9sXyz/f20t/19Y
        Nf9jXUf/hHZH/3FmQv9ZXF7/4uPk//////+wsrP/kZKP/5CRj//Z2tv//////OXm5v9PVFemc3d6AH6B
        hAM7QUQAPEFFAGlscARaXmIAR0xPotDS0//t7u775+jo//Dx8v/v8PL/6uvr//Dw8f97foH/fHt7/5uc
        pP+Qkp7/mJie/5eXmv+QkZn/mpqg/3x8fP96foD/8PDw/+rr6//v8PL/8PHy/+fn6P/t7u770NLT/0dM
        T6JaXmIAaWxwBDxBRQA8Q0MAOj9DAjE3OwA5PkIsQ0hMz3p+gf+OkZT9i42O/46QkP+Mj5H/jpGU/3t/
        gv93eXr/hIWC/4GCgP98fn7/fX5//4GCgP+FhYP/d3l6/3t/gf+OkZT/jI+Q/4+QkP+LjY//jpGU/Xp+
        gf9DSEzPOT5CLTI3OwA6P0MCPD9FADpBRAA6QUQAQUZKBCMoLQAnLDFtxMXH//////v6+/3/8/b///n7
        /////////////9ve4//Jztn/1Nfb/+Hi4v/h4uL/1djd/8nO2f/b3eD////////////6/P//8/b///n6
        /f/////7xMXH/ycsMW0jKC0AQUZKBDpBRAA6QUQAPEFFAEFGSgBFSk4EJCouACsxNW/Gx8j/////+2xr
        Xv+GeEn/aGVX/97f4v/09fn/cG5d/5CCU/9ycGT/7O3v/+zu8v9vbFf/kYNV/3NxaP/z9Pb/3+Hl/2Vh
        Sv+Hek3/bm5m//////vGyMj/KzE1byQqLgBFSk4EQUZKADxBRQAAAAAAPEFFAEVJTQQmLDAAKS4zbcnK
        yf/3/P/7gXI6///XEP+Zikf/0dTc/+zw+/+GcS3//9kU/4+CTP/e4Oj/3uPw/4x0Iv//2xj/iH5S/+vt
        8//T2Ob/lnoa///cHf+DfVr/9vn/+8rKyv8pLjJtJiwwAEVJTQQ8QUUAAAAAAAAAAAAAAAAARUlNBCYs
        MAApLjJtycrJ//r9//tsYjj/26YA/35sMv/S1t7/7vH6/25hK//dqAD/d2k6/+Dj6v/h5e//cmEh/96p
        AP9zaEL/7e/1/9TY4/94Yxf/3agD/3FpS//4+//7ycrK/yguMm0mLDAARUlNBAAAAAAAAAAAAAAAAAAA
        AABFSU0EJiwwACovM23Gx8j/////+5mcnf+Mjoz/jpGR/+7v7//7/Pz/lpiZ/42OjP+SlJT/9fb2//X2
        9v+SlJX/jY6M/5aYmP/7+/z/7+/w/4+Rkv+Mjoz/mZuc//////vGx8j/KS8zbSYsMABFSU0EAAAAAAAA
        AAAAAAAAAAAAAEVJTQQmLDAAKjA0bcXGx//////7/f39////////////////////////////////////
        ///////////////////////////////////////////////////9/f3/////+8XGx/8qMDRtJiwwAEVJ
        TQQAAAAAAAAAAAAAAAAAAAAARUlNBCYsMAAqMDRtxcbI//////vS1dn/wMbT/8vO0//6+vr////+/9HU
        2f/AxdP/ztDV//39/P/9/fz/ztHY/8DF0//Q09b///////r6+f/Mz9f/wMXS/9HT1//////7xcbI/yow
        NG0mLDAARUlNBAAAAAAAAAAAAAAAAAAAAABFSU0EJiwwACkuM23Iycn/////+2NeQ/+ihSv/aGBD/9ja
        3v/y9Pr/YVo5/6SHLv9mYEj/5efr/+bp7/9hWDH/pIgw/2VhTv/x8vX/2t3k/2NYKv+jiDL/ZmNU//3/
        //vIycr/KS4zbSYsMABFSU0EAAAAAAAAAAAAAAAAAAAAAEVJTQQmLDAAKS4zbcnKyf/4+//7hXg+///h
        C/+bkkr/09Xe/+zw/P+LeTD//+UP/5KLUP/g4un/4OTy/5J9Jv//5hP/jIZX/+zt9P/U2ef/moIc///m
        GP+Hg17/9/j/+8nLyv8pLjJtJiwwAEVJTQQAAAAAAAAAAAAAAAAAAAAARUlNBCYsMAApLjNtyMnJ//3/
        //tkXT7/sIkG/2tfMv/V2N//8PL5/2NaMv+yiwj/aF46/+Pm6//k5+7/ZFkp/7KLCf9mX0P/7/H2/9fa
        4/9nWSD/sYsL/2ZhTP/7/f/7ycrK/ykuMm0mLDAARUlNBAAAAAAAAAAAAAAAAAAAAABFSU0EJiwwACov
        NG3Fxsj/////+7/Cxv+ssr//trm///f39v/+/v3/vcDF/6yyv/+5vMH/+/v6//v7+v+5vcP/rLK//7y/
        w//+/v7/9/f2/7e6wf+ssr//vsHE//////vFxsj/Ki80bSYsMABFSU0EAAAAAAAAAAAAAAAAAAAAAEVJ
        TQQmLDAAKjA0bcXGx//////7/f39////////////////////////////////////////////////////
        ///////////////////////////////////9/f3/////+8XGx/8qMDRtJiwwAEVJTQQAAAAAAAAAAAAA
        AAAAAAAARUlNBCYsMAAqLzRtxcfI//////usr7L/mp+n/6KlqP/z8/P//f39/6mssP+an6f/pair//j4
        +P/4+Pj/pamt/5qfp/+pq67//f39//Pz8/+ipqr/mp+m/6yusf/////7xcfI/yovNG0mLDAARUlNBAAA
        AAAAAAAAAAAAAAAAAABFSU0EJiwwACkuMm3Jysn/+/7/+2ZdNv/Knxn/dmg8/9PW2//v8vr/Z1sq/82i
        Hf9wZUL/4eTo/+Lm7/9pWyD/zqMg/21kR//u8PT/1dnj/25cGP/MoiT/a2VO//n7//vJysr/KC4ybSYs
        MABFSU0EAAAAAAAAAAAAAAAAAAAAAERJTQQmLDAAKS4zbcnKyP/3+//7hHY9///aBP+ajUT/0tTe/+vv
        +/+JdzD//94H/5GHS//f4en/3+Tx/5F6Jf//3wv/ioNT/+vt8//T2Ob/mX8c///fD/+FgFr/9vj/+8nK
        yf8pLjNtJiwwAERJTQQAAAAAAAAAAAAAAAA8QUUARUlNBCYsMAApLzNtx8nJ//////toZVP/kHkm/2Zf
        RP/c3uL/9PX5/2VhSf+Reif/ZmFL/+jq7v/p6+//ZF5B/5F6KP9nY1L/8/T4/93f5f9kXDr/kHkp/2ln
        Wv/////7yMnJ/ykuM20mLDAARUlNBDxBRQAAAAAAAAAAADxBRQBGSk4EKC0yAC0yNm2+wMH/////+9zd
        4f/N0+L/2Nrf//T08//29vX/3N7i/83S4v/a2+D/9fX0//X19P/a3OL/zdLh/9vd4f/29vX/9PTz/9jb
        4f/N0uH/293g//////u+wMH/LTI2bSgtMgBGSk4EPEFFAAAAAAAAAAAAOD1BADxBRgQmLTEAKC8zcpaY
        mv/Iycr7w8TE/8jIxv/Gx8b/v8DC/7/Awf/Fxsb/yMjG/8XGxv+/wMH/v8DB/8XGxv/IyMb/xcbG/7/A
        wf+/wML/xsbG/8jIxv/DxMT/yMnK+5aYm/8oLzNyJi0xADxBRgQ3PEEAAAAAAAAAAAA8QUUCJy40ACgv
        NCBRVFboZGVm/2JjZfpiY2T7YWJk+2FiZPtjZGX7Y2Rl+2FjZPthYmT7YWJk+2NkZftjZGX7YWJk+2Fi
        ZPthY2T7Y2Rl+2NkZfthYmT7YWJk+2JjZPtiY2X6ZGVm/lFUVukoLzUhJy80ADxBRQIAAAAAAAAAADxB
        RQMbIigAHSQqPHFzdP+rqaj9oqCf/6Ohof+joaH/o6Gh/6Ohof+joaH/o6Gh/6Ohof+joaH/o6Gh/6Oh
        of+joaH/o6Gh/6Ohof+joaH/o6Gh/6Ohof+joaH/o6Gh/6Kgn/+rqaj9cnN1/x4lKz4cIygAPEFFAwAA
        AAAAAAAAPEFFAB4jJwAVGh4CPkNHdUZLT55HS0+XR0tPmEdLT5hHS0+YR0tPmEdLT5hHS0+YR0tPmEdL
        T5hHS0+YR0tPmEdLT5hHS0+YR0tPmEdLT5hHS0+YR0tPmEdLT5hHS0+YR0tPl0ZLT54+Q0d2Gh8jAyEm
        KgA8QUUAAAAAAAAAAAA8QUUAPEFFADxBRQA8QUUAPEFFADxBRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QUYAPEFGADxB
        RgA8QUYAPEFGADxBRgAAAAAAygAAU0AAAAIgAAAEIAAABCAAAAQgAAAEIAAABCAAAAQgAAAEoAAABdAA
        AAuQAAAJ0AAAC9AAAAvQAAAL0AAAC9AAAAvQAAAL0AAAC9AAAAvQAAAL0AAAC9AAAAvQAAAL0AAAC9AA
        AAuQAAAJkAAACaAAAAWgAAAFoAAABaf//+U=
</value>
  </data>
</root>