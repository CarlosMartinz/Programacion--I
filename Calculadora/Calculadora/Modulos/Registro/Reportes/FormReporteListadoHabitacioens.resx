<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAC6urpOvLy8pr29vae9vb2nvb29p729vae9vb2nvb29p729vae9vb2nvb29p729vae9vb2nvb29p729
        vae9vb2nvb29p729vae9vb2nvb29p729vae9vb2nvb29p729vae9vb19AAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANPT0+fh4eH/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li
        4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/9ra2v/BwcE2AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4eHh7+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li
        4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li
        4j8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHv4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li
        4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li
        4v/i4uL/4uLiPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOHh4e/i4uL/4uLi/+Li4v+ysrL/pKSk/6Sk
        pP+kpKT/pKSk/6SkpP+kpKT/pKSk/6SkpP+kpKT/pKSk/6SkpP/Nzc3/4uLi/+Li4v/i4uL/4uLi/+Li
        4v/i4uL/4uLi/+Li4v/i4uI/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4eHh7+Li4v/i4uL/4uLi/9DQ
        0P/IyMj/yMjI/8jIyP/IyMj/yMjI/8jIyP/IyMj/yMjI/8jIyP/IyMj/yMjI/9vb2//i4uL/4uLi/3R0
        dP+FhYX/19fX/+Li4v/i4uL/4uLi/+Li4j8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADh4eHv4uLi/+Li
        4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li
        4v/i4uL/gICA/ysrK/9aWlr/4ODg/+Hh4f/i4uL/4uLiPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOHh
        4e/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li
        4v/i4uL/4uLi/+Li4v+lpaX/iYmJ/+zs7P/19fX/6Ojo/97e3v/i4uI/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4eHh7+Li4v/i4uL/4uLi/9/f3//c3Nz/3Nzc/9zc3P/c3Nz/3Nzc/9zc3P/c3Nz/3Nzc/9zc
        3P/c3Nz/3Nzc/9zc3P/c3Nz/3Nzc/+bm5v/7+/v/+Pj4//b29v/v8vP/hsXu/ySa6H8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADi4uLv4uLi/+Li4v/i4uL/o6Oj/5CQkP+QkJD/kJCQ/5CQkP+QkJD/kJCQ/5CQ
        kP+QkJD/kJCQ/5CQkP+QkJD/kJCQ/5CQkP+QkJD/pKSk//v7+//4+Pj/1ej1/02w8P8joPD/HZrq+hiY
        5jQAAAAAAAAAAAAAAAAAAAAAAAAAAOPj4+/j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj
        4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//l5eX/+vv7/5vP8f8vp/T/H5zs/yKf
        7/8gnOz/Gpfn1wCN4gkAAAAAAAAAAAAAAAAAAAAA4+Pj7+Tk5P/k5OT/5OTk/+Tk5P/k5OT/5OTk/+Tk
        5P/k5OT/5OTk/+Tk5P/k5OT/5OTk/+Tk5P/k5OT/5OTk/+Tk5P/k5OT/5OTk/+Tk5P94wfD/G5fn/x+b
        6/8in+//HJjo/yGe7v8dmen/GJTllAAAAAAAAAAAAAAAAAAAAADk5OTv5eXl/+Xl5f/l5eX/5eXl/+Xl
        5f/l5eX/5eXl/+Xl5f/l5eX/5eXl/+Xl5f/l5eX/5eXl/+Xl5f/l5eX/5eXl/+Xl5f/l5eX/5eXl/7zX
        6P8ln+7/GZXl/yGe7v8dmen/G5fn/x+b6/8ZleX+FZHfSAAAAAAAAAAAAAAAAOXl5e/l5eX/5eXl/+Xl
        5f/R0dH/yMjI/8jIyP/IyMj/yMjI/8jIyP/IyMj/yMjI/8jIyP/IyMj/yMjI/8jIyP/IyMj/yMjI/8jI
        yP/IyMj/yMjI/4C+5v8gnOz/Gpbm/x+c7P8YlOT/HJnp/xyY6P8WkuPlDYbWEwAAAAAAAAAA5eXl7+bm
        5v/m5ub/5ubm/7a2tv+oqKj/qKio/6ioqP+oqKj/qKio/6ioqP+oqKj/qKio/6ioqP+oqKj/qKio/6io
        qP+oqKj/qKio/6ioqP+oqKj/0tTV/0+x8P8em+v/G5jo/xuX5/8VkeH/HZnp/xiV5f8TkN+rAAAAAAAA
        AADm5ubv5+fn/+fn5//n5+f/5+fn/+fn5//n5+f/5+fn/+fn5//n5+f/5+fn/+fn5//n5+f/5+fn/+fn
        5//n5+f/5+fn/+fn5//n5+f/5+fn/+fn5//n5+f/yt3p/y2l8f8cmen/G5fn/xaS4v8Xk+P/G5fn/xeS
        4f9/uuFoAAAAAOfn5+/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/ms3u/ySg8P8bmOj/GJTk/xSQ
        4P8yneL/tdTn/9DQ7/hPT98g6Ojo7+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo
        6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+jo6P/o6Oj/Ybny/yKe
        7v8alub/ZrLi/9/l6/+fn+n/Rkbh/0ND47zo6Ojv6enp/+np6f/p6en/vLy8/66urv+urq7/rq6u/66u
        rv+urq7/rq6u/66urv+urq7/rq6u/66urv+urq7/rq6u/66urv+urq7/rq6u/66urv/Z2dn/6enp/+np
        6f/X4+v/Rq/y/a/V7v/W1ur/amrj/0ND4v9GRuT/SEjn9+np6e/q6ur/6urq/+rq6v/Pz8//xcXF/8XF
        xf/FxcX/xcXF/8XFxf/FxcX/xcXF/8XFxf/FxcX/xcXF/8XFxf/FxcX/xcXF/8XFxf/FxcX/xcXF/+Li
        4v/q6ur/6urq/+rq6v/t7u6sqKjj/0tL4f9EROP/R0fl/0hI59pKSuc36urq7+vr6//r6+v/6+vr/+vr
        6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr
        6//r6+v/6+vr/+vr6//r6+v/6+vr/+rq6j9CQuGiRUXk/0hI5v5KSumXRUXnCwAAAADr6+vv6+vr/+vr
        6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr
        6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6urqP0hI7A5JSeeWSEjmSgAAAAAAAAAAAAAAAOvr
        6+/s7Oz/7Ozs/+zs7P/s7Oz/7Ozs/+zs7P/s7Oz/7Ozs/+zs7P/s7Oz/7Ozs/+zs7P/s7Oz/7Ozs/+zs
        7P/s7Oz/7Ozs/+zs7P/s7Oz/7Ozs/+zs7P/s7Oz/7Ozs/+zs7P/u7u4/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA7Ozs7+3t7f/t7e3/7e3t/6mpqf+VlZX/lZWV/5WVlf+VlZX/lZWV/5WVlf+VlZX/lZWV/5WV
        lf+VlZX/lZWV/9DQ0P/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+7u7j8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADt7e3v7u7u/+7u7v/u7u7/5+fn/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li
        4v/i4uL/4uLi/+Li4v/i4uL/7Ozs/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7uPwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAO7u7u/v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v
        7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//g29H/xbGJ/8OwiP/DsIv/wrGP/8S1
        lvng2tQqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7u7u7+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v
        7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/9CxdP/Nn0P/ypxA/8WY
        PP/BlDf5vI8zUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw8PDv8PDw//Dw8P/w8PD/8PDw//Dw
        8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/2LRs/86g
        RP/KnED/xZc7+cKVOVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw8O/x8fH/8fHx//Hx
        8f/x8fH/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/8fHx//Hx
        8f/YtGz/zqBE/8mbP/nImTxQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8fHx7/Ly
        8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly
        8v/y8vL/8vLy/9i0bP/Nn0P5zJw/UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADy8vLd8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly
        8v/y8vL/8vLy//Ly8v/y8vL/2bVt+c+iQlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPLy8iny8vJ28vLyd/Ly8nfy8vJ38vLyd/Ly8nfy8vJ38vLyd/Ly8nfy8vJ38vLyd/Ly
        8nfy8vJ38vLyd/Ly8nfy8vJ38vLyd/Ly8nfdw4dEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAHwAA
        AA8AAAAPAAAABwAAAAMAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAABwAAAD8AAAA/AAAAPwAA
        AD8AAAB/AAAA/wAAAf8AAAP/AAAH/wAAD/8=
</value>
  </data>
</root>