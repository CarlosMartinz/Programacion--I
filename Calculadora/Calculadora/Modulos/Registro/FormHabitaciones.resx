<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5v/m5ub/5ubm/+Tk5P/i4uL/4uLi/+Li4v/i4uL/5OTk/+bm5v/l5eX/tLS0/xgYGP8AAAAkBgYGOgAA
        AP8AAADHAAAAjAAAAE0AAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZlhYWP/////97e3t/+Tk
        5P/m5ub/5ubm/+bm5v/l5eX/7e3t//r6+v/7+/v/+vr6//z8/P/x8fH/4uLi//Ly8v/m5ub7Pz8//wAA
        AGEAAAAAAAAANgAAAM0AAAAyAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDLS0t/2Fh
        Yfyjo6P/8PDw/+Tk5P/m5ub/5OTk/+3t7f+5ubn/ZGRk/2JiYv9lZWX/WVlZ/6Kiov/5+fn/oqKi/1JS
        UvshISH/AAAAcAUFBTsAAACRAAAAxwAAAP8AAABEAAAAAAAAAAMAAAAEAAAABAAAAAQAAAAEAAAAAAAA
        AIQtLS3/YWFh/KOjo//w8PD/5OTk/+bm5v/i4uL/+Pj4/2xsbP8gICD/bW1t/2NjY/9ZWVn/oqKi//n5
        +f+ioqL/UlJS+yEhIf8AAABwBgYGNgAAAKUAAACCAAAAiQAAADsAAAAAAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAZlhYWP/////97e3t/+Tk5P/m5ub/5ubm/+Li4v/6+vr/ZWVl/3Fxcf//////9vb2//z8
        /P/x8fH/4uLi//Ly8v/m5ub7Pz8//wAAAF8AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAdgAA
        AIEAAACUAAAAhwAAAAoAAAAzIyMj++Li4v/k5OT/5ubm/+bm5v/m5ub/4uLi//v7+/9iYmL/YGBg//f3
        9//e3t7/4uLi/+Tk5P/m5ub/5eXl/7S0tP8YGBj/AAAALwAAAAAAAAAHAAAABAAAAAUAAAACAAAAAAAA
        AAAAAAC3AAAA/wAAAJUAAACBAAAADQAAAAAAAADHpaWl//X19f3i4uL/5ubm/+bm5v/k5OT/8PDw/6Sk
        pP+kpKT/8PDw/+Tk5P/m5ub/5ubm/+bm5v/o6Oj9fHx8/wAAAMsAAAAA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAACXAAAAmAAAAAAAAAABAAAAAAAAAFwzMzP/8vLy++Xl5f/l5eX/5ubm/+bm
        5v/l5eX/7e3t/+3t7f/l5eX/5ubm/+bm5v/k5OT/6urq/8zMzPsjIyP/AAAAXgAAAAABAQEDAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAMAAAAhAAAAJQAAAD/AAAAtAAAAAABAQEBAAAAAAAAALVmZmb/////+eXl
        5f/i4uL/5ubm/+Xl5f/t7e3/7e3t/+Xl5f/m5ub/4uLi/+rq6v/r6+v5S0tL/wAAALUAAAAAAQEBAQUF
        BQAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAoAAACKAAAAlAAAAIEAAAB0AAAABQcHBwEAAAAAHR0dFAAA
        ANJkZGT/8/Pz+vb29vzk5OT/7e3t/6Ojo/+jo6P/7e3t/+Tk5P/39/f85+fn+k5OTv8AAADSGxsbFAAA
        AAAFBQUBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIC
        AgICAgIAHBwcEwAAALkuLi7/pKSk/uLi4v/////8a2tr/Gtra/z////84+Pj/6CgoP4lJSX/AAAAuRkZ
        GRQDAwMAAgICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAABAAA
        AAAAAAAAAAAAAAICAgIAAAAB3t7eAQEBAVkAAADMHx8f/FlZWf8tLS3/LS0t/1lZWf8fHx/8AAAAzQEB
        AVnu7u4BAAAAAQMDAwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADAwMDAAgICAIAAAAxAAAAaQAAAIUAAACFAAAAaQAA
        ADEJCQkDAwMDAAAAAAMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+hf/ofIQACH6F/+h9AAAAPQAAAD0AAAA9AAAAPQAAAD6AAAB8gAAAfEA
        AALRAAACpAAAAkAAAAKgAAACQAAAAkAAAASAABfSgAAQRQAAAF8AAAi/AAAAQAAAAF8AAAtAAAAIIIAA
        E5KAABNBQAAjQEAAJ/+gAFdAQAAv/6QCX/8=
</value>
  </data>
</root>